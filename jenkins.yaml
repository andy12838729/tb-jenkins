jenkins:
  systemMessage: "Jenkins configured using CasC."
  authorizationStrategy: "loggedInUsersCanDoAnything"
  clouds:
  - kubernetes:
      connectTimeout: 15
      containerCap: 6
      containerCapStr: "6"
      credentialsId: "k8s-admin-sa"
      jenkinsTunnel: "http://jenkins-master-svc:50000"
      jenkinsUrl: "http://jenkins-master-svc/jenkins-service"
      name: "kubernetes"
      namespace: "cicd"
      serverUrl: "https://172.16.0.2"
      templates:
      - containers:
        - alwaysPullImage: true
          envVars:
          - secretEnvVar:
              key: "GCR_ID"
              optional: false
              secretKey: "folder"
              secretName: "gcr-folder"
          image: "google/cloud-sdk:latest"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "gcloud"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        id: "c89ecca3-b78b-4dc9-8c28-55ee9396126c"
        label: "kubepod"
        name: "jenkins-agent"
        namespace: "cicd"
        nodeUsageMode: "NORMAL"
        runAsUser: "0"
        volumes:
        - secretVolume:
            mountPath: "/var/secrets/google"
            optional: false
            secretName: "ec-service-account"
        yamlMergeStrategy: "override"
  numExecutors: 2
  mode: EXCLUSIVE
  disableRememberMe: false
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  labelAtoms:
  - name: "kubepod"
  - name: "master"
  markupFormatter: "plainText"
  scmCheckoutRetryCount: 3
  securityRealm:
    local:
      allowsSignup: false
      users:
      - id: "admin"
        password: "admin"
      - id: "${DAC_JENKINS_USER}"
        description: "DAC User"
        password: "${DAC_JENKINS_PASSWORD}"
credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          description: "github-credentials"
          id: "gituser"
          password: "Jn5u9y8UI*M*"
          scope: GLOBAL
          username: "TBservice-jenkins"
      - googleRobotPrivateKey:
          projectId: "${GCR_ID}"
          serviceAccountConfig:
            json:
              filename: "ec-service-account-config.json"
              secretJsonKey: ${base64:${readFile:${GOOGLE_APPLICATION_CREDENTIALS}}}
      - file:
          scope: GLOBAL
          id: "google"
          fileName: "ec-service-account-config.json"
          secretBytes: ${base64:${readFile:${GOOGLE_APPLICATION_CREDENTIALS}}}
unclassified:
  gitSCM:
    createAccountBasedOnEmail: true
    globalConfigEmail: "Jenkins@gft.com"
    globalConfigName: "Jenkins"
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: true
tool:
  dockerTool:
    installations:
    - name: "docker"
      properties:
      - installSource:
          installers:
          - fromDocker:
              version: "19.03.9"
  git:
    installations:
    - home: "git"
      name: "Default"
#jobs:
#- script: >
#    job('Seed All') {
#      parameters {
#        stringParam('REPO', 'https://github.com/tranquilitybase-io/tb-jenkins-jobs.git', 'The branch where Jenkins is stored')
#        stringParam('BRANCH', 'main', 'The branch (used for testing)')
#      }
#      triggers {
#        cron("H/15 * * * *")
#      }
#      scm {
#        git {
#          remote {
#            url '$REPO'
#            branch '$BRANCH'
#          }
#        }
#      }
#      steps {
#        dsl {
#          external('*.groovy')
#       // default behavior
#       // removeAction('IGNORE')
#          removeAction('DELETE')
#        }
#      }
#    }
