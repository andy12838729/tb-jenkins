jenkins:
  systemMessage: "Jenkins configured using CasC."
  authorizationStrategy: "loggedInUsersCanDoAnything"
  clouds:
  - kubernetes:
      connectTimeout: 15
      containerCap: 6
      containerCapStr: "6"
      credentialsId: "k8s-admin-sa"
      jenkinsTunnel: "http://jenkins-master-svc:50000"
      jenkinsUrl: "http://jenkins-master-svc/jenkins-service"
      name: "kubernetes"
      namespace: "cicd"
      serverUrl: "https://172.16.0.2"
      templates:
      - containers:
        - args: "cat"
          command: "/bin/sh -c"
          envVars:
          - envVar:
              key: "TF_VAR_region"
              value: "europe-west1"
          - envVar:
              key: "TF_VAR_parent"
              value: "${_FOLDER_TARGET}"
          - envVar:
              key: "GOOGLE_APPLICATION_CREDENTIALS"
              value: "/var/secrets/google/ec-service-account-config.json"
          - envVar:
              key: "TERRAFORM_VERSION"
              value: "0.14.6"
          - envVar:
              key: "org_id"
              value: "$_ORG_ID"
          - envVar:
              key: "billing_account"
              value: "$_BILLING_ACCOUNT"
          - envVar:
              key: "group_org_admins"
              value: "grp.tb.org.admins@tranquilitybase-demo.io"
          - envVar:
              key: "group_billing_admins"
              value: "grp.tb.billing.account.admins@tranquilitybase-demo.io"
          - envVar:
              key: "parent_folder"
              value: "$_PARENT_FOLDER"
          - envVar:
              key: "default_region"
              value: "europe-west1"
          - envVar:
              key: "domains_to_allow"
              value: "tranquilitybase-demo.io"
          - envVar:
              key: "billing_data_users"
              value: "cft-test-gcp-billing-admins@tranquilitybase-demo.io"
          - envVar:
              key: "audit_data_users"
              value: "cft-test-gcp-security-admins@tranquilitybase-demo.io"
          - envVar:
              key: "terraform_service_account"
              value: "$_TERRAFORM_SA_NAME"
          - envVar:
              key: "scc_notification_name"
              value: "scc-notify128"
          - envVar:
              key: "create_access_context_manager_access_policy"
              value: "false"
#          ==============
          image: "google/cloud-sdk:latest"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "gcloud"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        id: "c89ecca3-b78b-4dc9-8c28-55ee9396126c"
        label: "kubepod"
        name: "jenkins-agent"
        namespace: "cicd"
        nodeUsageMode: "NORMAL"
        runAsUser: "0"
        volumes:
        - secretVolume:
            mountPath: "/var/secrets/google"
            optional: false
            secretName: "ec-service-account"
        yamlMergeStrategy: "override"
  numExecutors: 2
  mode: EXCLUSIVE
  disableRememberMe: false
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  labelAtoms:
  - name: "kubepod"
  - name: "master"
  markupFormatter: "plainText"
  scmCheckoutRetryCount: 3
  securityRealm:
    local:
      allowsSignup: false
      users:
      - id: "admin"
        password: "admin"
      - id: "${DAC_JENKINS_USER}"
        description: "DAC User"
        password: "${DAC_JENKINS_PASSWORD}"
credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          description: "github-credentials"
          id: "gituser"
          password: "Jn5u9y8UI*M*"
          scope: GLOBAL
          username: "TBservice-jenkins"
      - googleRobotPrivateKey:
          projectId: "${GCR_ID}"
          serviceAccountConfig:
            json:
              filename: "ec-service-account-config.json"
              secretJsonKey: ${base64:${readFile:${GOOGLE_APPLICATION_CREDENTIALS}}}
      - file:
          scope: GLOBAL
          id: "google"
          fileName: "ec-service-account-config.json"
          secretBytes: ${base64:${readFile:${GOOGLE_APPLICATION_CREDENTIALS}}}
      - string:
          scope: GLOBAL
          id: "kube"
          secret: eyJhbGciOiJSUzI1NiIsImtpZCI6IjRETlBjdE8wX2MtcGlUNGV4Q0VDUWJvbjJNb3dycEJYQzVIZXdjM19jcmsifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJjaWNkIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImNpY2Qtc2VydmljZS1hY2NvdW50LXRva2VuLTdtYmR3Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImNpY2Qtc2VydmljZS1hY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNzRmOWJkMTYtMjZiNy00ZjE0LWJkMzgtNGZlYWM0NWI0YWZmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmNpY2Q6Y2ljZC1zZXJ2aWNlLWFjY291bnQifQ.Y1gvMe-6Jv5Lxq85xE-sJe5KcJAF-tmB_7hQzd9g1wxaKOdgyTfXKQJw0j4oXmIAW8GFPjPMgnjrSoewgN8h_8d79oIDVrGLMtrfhJ2B73zuv-ER76bQ794t1wRRlNu8oBW3c1C5BiDclQpisy2RBtsmWpGEnN4jwoOrU_oTg9PzcM2Lt2hjMAYQcVCx6j1j1sW5EGMuv2oBnWdIQmRLCiGR17zgxLtyZBSudlJZfcPvD9BB8zE_NrFt9czQLj4Iym3htKlqU5AetnJLXY6jAhNn1Dsvb8x8CJM9L2f3sjYQW1on_cKtk1TF6UBAXYakhax9gn5a2OfbXzO3MO9Rug
unclassified:
  gitSCM:
    createAccountBasedOnEmail: true
    globalConfigEmail: "Jenkins@gft.com"
    globalConfigName: "Jenkins"
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: true
tool:
  dockerTool:
    installations:
    - name: "docker"
      properties:
      - installSource:
          installers:
          - fromDocker:
              version: "19.03.9"
  git:
    installations:
    - home: "git"
      name: "Default"
#jobs:
#- script: >
#    job('Seed All') {
#      parameters {
#        stringParam('REPO', 'https://github.com/tranquilitybase-io/tb-jenkins-jobs.git', 'The branch where Jenkins is stored')
#        stringParam('BRANCH', 'main', 'The branch (used for testing)')
#      }
#      triggers {
#        cron("H/15 * * * *")
#      }
#      scm {
#        git {
#          remote {
#            url '$REPO'
#            branch '$BRANCH'
#          }
#        }
#      }
#      steps {
#        dsl {
#          external('*.groovy')
#       // default behavior
#       // removeAction('IGNORE')
#          removeAction('DELETE')
#        }
#      }
#    }
